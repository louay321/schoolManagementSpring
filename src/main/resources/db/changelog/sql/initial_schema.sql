create sequence hibernate_sequence start with 1000 increment by 1;

create table Student (
     id bigint  not null generated by default as identity (start with 100 increment by 1),
     created timestamp,
     updated timestamp,
     first_name varchar(20) not null,
     last_name varchar(20) not null,,
     address varchar(50) not null,
     primary key (id)
);

create table Teacher (
    id bigint  not null generated by default as identity (start with 100 increment by 1),
    created timestamp,
    updated timestamp,
    first_name varchar(20) not null,
    last_name varchar(20) not null,
    address varchar(50) not null,
    primary key (id)
);


create table Subject (
    id bigint  not null generated by default as identity (start with 100 increment by 1),
    created timestamp,
    updated timestamp,
    credits varchar(64) not null,
    primary key (id)
);

create table Roles (
    id bigint  not null generated by default as identity (start with 100 increment by 1),
    created timestamp,
    updated timestamp,
    version integer,
    name varchar(50) not null,
    primary key (id)
);

create table users (
    id bigint  not null generated by default as identity (start with 100 increment by 1),
    created timestamp,
    updated timestamp,
    enabled boolean,
    version integer,
    name varchar(64) not null,
    password varchar(255) not null,
    primary key (id)
);


create table user_roles (
    id bigint  not null generated by default as identity (start with 100 increment by 1),
    created timestamp,
    updated timestamp,
    version integer,
    user_id bigint not null,
    role_id bigint not null
);


alter table Student add constraint UK_Unique_id unique (id);

alter table Teacher add constraint UK_Unique_id unique (id);

alter table Subject add constraint UK_Unique_id unique (id);


alter table user_roles add constraint FK_user_role_role_id foreign key (role_id) references roles
    ON update RESTRICT
    ON delete RESTRICT;

alter table user_roles add constraint FK_user_role_user_id foreign key (user_id) references users(id)
    ON update RESTRICT
    ON delete RESTRICT;
